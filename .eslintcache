[{"/Users/arturhimself/work/domains/_pet/game-of-life/src/App.tsx":"1","/Users/arturhimself/work/domains/_pet/game-of-life/src/index.tsx":"2","/Users/arturhimself/work/domains/_pet/game-of-life/src/components/Field.tsx":"3","/Users/arturhimself/work/domains/_pet/game-of-life/src/components/Cell.tsx":"4","/Users/arturhimself/work/domains/_pet/game-of-life/src/components/Menu.tsx":"5"},{"size":524,"mtime":1609658312662,"results":"6","hashOfConfig":"7"},{"size":151,"mtime":1608466231308,"results":"8","hashOfConfig":"7"},{"size":2428,"mtime":1609680645463,"results":"9","hashOfConfig":"7"},{"size":310,"mtime":1609613764579,"results":"10","hashOfConfig":"7"},{"size":264,"mtime":1608465300694,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1n6y6xh",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/arturhimself/work/domains/_pet/game-of-life/src/App.tsx",[],["24","25"],"/Users/arturhimself/work/domains/_pet/game-of-life/src/index.tsx",[],"/Users/arturhimself/work/domains/_pet/game-of-life/src/components/Field.tsx",["26"],"/Users/arturhimself/work/domains/_pet/game-of-life/src/components/Cell.tsx",["27"],"import { useState } from 'react';\nimport './Cell.scss';\n\ninterface CellProps { \n  index?: number,\n  filled: number,\n  styles?: Object,\n}\n\nconst Cell: React.FC<CellProps> = ({ filled, styles }) => {\n  return (\n    <div style={styles} className={`cell ${filled ? '_active' : ''}`} />\n  )\n};\n\nexport default Cell;","/Users/arturhimself/work/domains/_pet/game-of-life/src/components/Menu.tsx",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":61,"column":17,"nodeType":"34","endLine":63,"endColumn":11},{"ruleId":"35","severity":1,"message":"36","line":1,"column":10,"nodeType":"37","messageId":"38","endLine":1,"endColumn":18},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","Assignments to the 'intervalId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]